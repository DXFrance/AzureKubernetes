#cloud-config
write_files:
  - path: /etc/hosts
    permissions: '0755'
    owner: root
    content: |
      172.16.0.6  zwkubernetes-etcd02
      172.16.0.5  zwkubernetes-etcd01
      172.16.0.4  zwkubernetes-etcd00
      172.16.0.9  zwkubernetes-kube02
      172.16.0.8  zwkubernetes-kube01
      172.16.0.7  zwkubernetes-kube00
  - path: /opt/bin/curl-retry.sh
    permissions: '0755'
    owner: root
    content: |
      #!/bin/sh -x
      until curl templates/kubernetes-cluster-main-nodes-template.yml.tpl
      do sleep 1
      done

  - path: /etc/weave.%H.env
    owner: root
    permissions: '0600'
    content: >
      WEAVE_PASSWORD=aa28e88e522463246cc79cdae6705cdd92e41f75d2db781104f23209293d5757
      WEAVE_PEERS=zwkubernetes-kube00
      BREAKOUT_ROUTE=10.2.0.0/16
      BRIDGE_ADDRESS_CIDR=10.2.0.1/24
    
  - path: /etc/weave.%H.env
    owner: root
    permissions: '0600'
    content: >
      WEAVE_PASSWORD=aa28e88e522463246cc79cdae6705cdd92e41f75d2db781104f23209293d5757
      WEAVE_PEERS=zwkubernetes-kube00
      BREAKOUT_ROUTE=10.2.0.0/16
      BRIDGE_ADDRESS_CIDR=10.2.1.1/24
    
  - path: /etc/weave.%H.env
    owner: root
    permissions: '0600'
    content: >
      WEAVE_PASSWORD=aa28e88e522463246cc79cdae6705cdd92e41f75d2db781104f23209293d5757
      WEAVE_PEERS=zwkubernetes-kube00
      BREAKOUT_ROUTE=10.2.0.0/16
      BRIDGE_ADDRESS_CIDR=10.2.2.1/24
    
  - path: /etc/kubernetes/addons/skydns-rc.yaml
    owner: root
    permissions: '0640'
    encoding: base64
    content: |
      apiVersion: v1
      kind: ReplicationController
      metadata:
        name: kube-dns-v9
        namespace: kube-system
        labels:
          k8s-app: kube-dns
          version: v9
          kubernetes.io/cluster-service: true
      spec:
        replicas: 3
        selector:
          k8s-app: kube-dns
          version: v9
        template:
          metadata:
            labels:
              k8s-app: kube-dns
              version: v9
              kubernetes.io/cluster-service: true
          spec:
            containers:
            - name: etcd
              image: gcr.io/google_containers/etcd:2.0.9
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
              command:
              - /usr/local/bin/etcd
              - -data-dir
              - /var/etcd/data
              - -listen-client-urls
              - http://127.0.0.1:2379,http://127.0.0.1:4001
              - -advertise-client-urls
              - http://127.0.0.1:2379,http://127.0.0.1:4001
              - -initial-cluster-token
              - skydns-etcd
              volumeMounts:
              - name: etcd-storage
                mountPath: /var/etcd/data
            - name: kube2sky
              image: gcr.io/google_containers/kube2sky:1.11
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
              args:
              # command = /kube2sky
              - -domain=kube.local
              - -kube_master_url=http://zwkubernetes-kube00:8080
            - name: skydns
              image: gcr.io/google_containers/skydns:2015-03-11-001
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
              args:
              # command = /skydns
              - -machines=http://localhost:4001
              - -addr=0.0.0.0:53
              - -domain=kube.local
              ports:
              - containerPort: 53
                name: dns
                protocol: UDP
              - containerPort: 53
                name: dns-tcp
                protocol: TCP
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 5
              readinessProbe:
                httpGet:
                  path: /healthz
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 1
                timeoutSeconds: 5
            - name: healthz
              image: gcr.io/google_containers/exechealthz:1.0
              resources:
                limits:
                  cpu: 10m
                  memory: 20Mi
              args:
              - -cmd=nslookup kubernetes.default.svc.kube.local localhost >/dev/null
              - -port=8080
              ports:
              - containerPort: 8080
                protocol: TCP
            volumes:
            - name: etcd-storage
              emptyDir: {}
            dnsPolicy: Default  # Don't use cluster DNS.
  - path: /etc/kubernetes/addons/skydns-svc.yaml
    owner: root
    permissions: '0640'
    encoding: base64
    content: |
      apiVersion: v1
      kind: Service
      metadata:
        name: kube-dns
        namespace: kube-system
        labels:
          k8s-app: kube-dns
          kubernetes.io/cluster-service: true
          kubernetes.io/name: KubeDNS
      spec:
        selector:
          k8s-app: kube-dns
        clusterIP: 10.16.0.3
        ports:
        - name: dns
          port: 53
          protocol: UDP
        - name: dns-tcp
          port: 53
          protocol: TCP

coreos:
  update:
    group: stable
    reboot-strategy: off
  units:
    - name: systemd-networkd-wait-online.service
      drop-ins:
        - name: 50-check-github-is-reachable.conf
          content: |
            [Service]
            ExecStart=/bin/sh -x -c 'until curl --silent --fail https://status.github.com/api/status.json | grep -q "good"; do sleep 2; done'

    - name: weave-network.target
      enable: true
      content: |
        [Unit]
        Description=Weave Network Setup Complete
        Documentation=man:systemd.special(7)
        RefuseManualStart=no
        After=network-online.target
        [Install]
        WantedBy=multi-user.target
        WantedBy=kubernetes-master.target
        WantedBy=kubernetes-node.target

    - name: kubernetes-master.target
      enable: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Cluster Master
        Documentation=http://kubernetes.io/
        RefuseManualStart=no
        After=weave-network.target
        Requires=weave-network.target
        ConditionHost=zwkubernetes-kube00
        Wants=kube-apiserver.service
        Wants=kube-scheduler.service
        Wants=kube-controller-manager.service
        Wants=kube-proxy.service
        [Install]
        WantedBy=multi-user.target

    - name: kubernetes-node.target
      enable: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Cluster Node
        Documentation=http://kubernetes.io/
        RefuseManualStart=no
        After=weave-network.target
        Requires=weave-network.target
        ConditionHost=!zwkubernetes-kube00
        Wants=kube-proxy.service
        Wants=kubelet.service
        [Install]
        WantedBy=multi-user.target

    - name: 10-weave.network
      runtime: false
      content: |
        [Match]
        Type=bridge
        Name=weave*
        [Network]

    - name: install-weave.service
      enable: true
      content: |
        [Unit]
        After=network-online.target
        After=docker.service
        Before=weave.service
        Description=Install Weave
        Documentation=http://docs.weave.works/
        Requires=network-online.target
        [Service]
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=0
        ExecStartPre=/bin/mkdir -p /opt/bin/
        ExecStartPre=/opt/bin/curl-retry.sh           --silent           --location           git.io/weave           --output /opt/bin/weave
        ExecStartPre=/usr/bin/chmod +x /opt/bin/weave
        ExecStart=/opt/bin/weave setup
        [Install]
        WantedBy=weave-network.target
        WantedBy=weave.service

    - name: weaveproxy.service
      enable: true
      content: |
        [Unit]
        After=install-weave.service
        After=docker.service
        Description=Weave proxy for Docker API
        Documentation=http://docs.weave.works/
        Requires=docker.service
        Requires=install-weave.service
        [Service]
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        ExecStartPre=/opt/bin/weave launch-proxy --rewrite-inspect --without-dns
        ExecStart=/usr/bin/docker attach weaveproxy
        Restart=on-failure
        ExecStop=/opt/bin/weave stop-proxy
        [Install]
        WantedBy=weave-network.target

    - name: weave.service
      enable: true
      content: |
        [Unit]
        After=install-weave.service
        After=docker.service
        Description=Weave Network Router
        Documentation=http://docs.weave.works/
        Requires=docker.service
        Requires=install-weave.service
        [Service]
        TimeoutStartSec=0
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        ExecStartPre=/opt/bin/weave launch-router $WEAVE_PEERS
        ExecStart=/usr/bin/docker attach weave
        Restart=on-failure
        ExecStop=/opt/bin/weave stop-router
        [Install]
        WantedBy=weave-network.target

    - name: weave-expose.service
      enable: true
      content: |
        [Unit]
        After=install-weave.service
        After=weave.service
        After=docker.service
        Documentation=http://docs.weave.works/
        Requires=docker.service
        Requires=install-weave.service
        Requires=weave.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=0
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        ExecStart=/opt/bin/weave expose
        ExecStop=/opt/bin/weave hide
        [Install]
        WantedBy=weave-network.target

    - name: install-kubernetes.service
      enable: true
      content: |
        [Unit]
        After=network-online.target
        Before=kube-apiserver.service
        Before=kube-controller-manager.service
        Before=kubelet.service
        Before=kube-proxy.service
        Description=Download Kubernetes Binaries
        Documentation=http://kubernetes.io/
        Requires=network-online.target
        [Service]
        Environment=KUBE_RELEASE_TARBALL=https://github.com/kubernetes/kubernetes/releases/download/v1.1.2/kubernetes.tar.gz
        ExecStartPre=/bin/mkdir -p /opt/
        ExecStart=/opt/bin/curl-retry.sh --silent --location $KUBE_RELEASE_TARBALL --output /tmp/kubernetes.tgz
        ExecStart=/bin/tar xzvf /tmp/kubernetes.tgz -C /tmp/
        ExecStart=/bin/tar xzvf /tmp/kubernetes/server/kubernetes-server-linux-amd64.tar.gz -C /opt
        ExecStartPost=/bin/chmod o+rx -R /opt/kubernetes
        ExecStartPost=/bin/ln -s /opt/kubernetes/server/bin/kubectl /opt/bin/
        ExecStartPost=/bin/mv /tmp/kubernetes/examples/guestbook /home/core/guestbook-example
        ExecStartPost=/bin/chown core. -R /home/core/guestbook-example
        ExecStartPost=/bin/rm -rf /tmp/kubernetes
        ExecStartPost=/bin/sed 's/# type: LoadBalancer/type: NodePort/' -i /home/core/guestbook-example/frontend-service.yaml
        RemainAfterExit=yes
        Type=oneshot
        [Install]
        WantedBy=kubernetes-master.target
        WantedBy=kubernetes-node.target

    - name: kube-apiserver.service
      enable: true
      content: |
        [Unit]
        After=install-kubernetes.service
        Before=kube-controller-manager.service
        Before=kube-scheduler.service
        ConditionFileIsExecutable=/opt/kubernetes/server/bin/kube-apiserver
        Description=Kubernetes API Server
        Documentation=http://kubernetes.io/
        Wants=install-kubernetes.service
        ConditionHost=zwkubernetes-kube00
        [Service]
        ExecStart=/opt/kubernetes/server/bin/kube-apiserver             --insecure-bind-address=0.0.0.0             --advertise-address=$public_ipv4             --port=8080             $ETCD_SERVERS             --service-cluster-ip-range=10.16.0.0/12             --cloud-provider=vagrant             --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target

    - name: kube-scheduler.service
      enable: true
      content: |
        [Unit]
        After=kube-apiserver.service
        After=install-kubernetes.service
        ConditionFileIsExecutable=/opt/kubernetes/server/bin/kube-scheduler
        Description=Kubernetes Scheduler
        Documentation=http://kubernetes.io/
        Wants=kube-apiserver.service
        ConditionHost=zwkubernetes-kube00
        [Service]
        ExecStart=/opt/kubernetes/server/bin/kube-scheduler             --logtostderr=true             --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target

    - name: kube-controller-manager.service
      enable: true
      content: |
        [Unit]
        After=install-kubernetes.service
        After=kube-apiserver.service
        ConditionFileIsExecutable=/opt/kubernetes/server/bin/kube-controller-manager
        Description=Kubernetes Controller Manager
        Documentation=http://kubernetes.io/
        Wants=kube-apiserver.service
        Wants=install-kubernetes.service
        ConditionHost=zwkubernetes-kube00
        [Service]
        ExecStart=/opt/kubernetes/server/bin/kube-controller-manager             --master=127.0.0.1:8080             --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target

    - name: kubelet.service
      enable: true
      content: |
        [Unit]
        After=install-kubernetes.service
        ConditionFileIsExecutable=/opt/kubernetes/server/bin/kubelet
        Description=Kubernetes Kubelet
        Documentation=http://kubernetes.io/
        Wants=install-kubernetes.service
        ConditionHost=!zwkubernetes-kube00
        [Service]
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests/
        ExecStart=/opt/kubernetes/server/bin/kubelet             --docker-endpoint=unix:/var/run/weave/weave.sock             --address=0.0.0.0             --port=10250             --hostname-override=%H             --api-servers=http://zwkubernetes-kube00:8080             --logtostderr=true             --cluster-dns=10.16.0.3             --cluster-domain=kube.local             --config=/etc/kubernetes/manifests/
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-node.target

    - name: kube-proxy.service
      enable: true
      content: |
        [Unit]
        After=install-kubernetes.service
        ConditionFileIsExecutable=/opt/kubernetes/server/bin/kube-proxy
        Description=Kubernetes Proxy
        Documentation=http://kubernetes.io/
        Wants=install-kubernetes.service
        [Service]
        ExecStart=/opt/kubernetes/server/bin/kube-proxy              --master=http://zwkubernetes-kube00:8080              --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target
        WantedBy=kubernetes-node.target

    - name: kube-create-addons.service
      enable: true
      content: |
        [Unit]
        After=install-kubernetes.service
        ConditionFileIsExecutable=/opt/kubernetes/server/bin/kubectl
        ConditionPathIsDirectory=/etc/kubernetes/addons/
        ConditionHost=zwkubernetes-kube00
        Description=Kubernetes Addons
        Documentation=http://kubernetes.io/
        Wants=install-kubernetes.service
        Wants=kube-apiserver.service
        [Service]
        Type=oneshot
        RemainAfterExit=no
        ExecStart=/bin/bash -c 'until /opt/kubernetes/server/bin/kubectl create -f /etc/kubernetes/addons/; do sleep 2; done'
        SuccessExitStatus=1
        [Install]
        WantedBy=kubernetes-master.target

    - name: kube-apiserver.service
      drop-ins:
        - name: 50-etcd-initial-cluster.conf
          content: >
            [Service]

            Environment=ETCD_INITIAL_CLUSTER=zwkubernetes-kube00=http://zwkubernetes-kube00:4001,zwkubernetes-kube01=http://zwkubernetes-kube01:4001,zwkubernetes-kube02=http://zwkubernetes-kube02:4001
