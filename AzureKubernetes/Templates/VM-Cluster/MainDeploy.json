{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "pokube",
      "metadata": {
        "description": "Prefix of the components"
      }
    },
    "kubernetesVmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "Instance size for Kubernetes VMs"
      }
    },
    "ansibleVmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "Size of the Ansible virtual machine"
      }
    },
    "centosOSVersion": {
      "type": "string",
      "defaultValue": "7.2",
      "allowedValues": [
        "7.2",
        "7.1",
        "7.0"
      ],
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Allowed values are: 7.0, 7.1, 7.2"
      }
    },
    "numberOfMasters": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of kubernetes Masters nodes to create"
      }
    },
    "numberOfMinions": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of kubernetes Minions nodes to create"
      }
    },
    "numberOfEtcd": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Etcd nodes to create"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "devops",
      "metadata": {
        "description": "Username to log on the VMs"
      }
    },
    "adminPassword": {
      "type": "string",
      "defaultValue": "devops",
      "metadata": {
        "description": "Password for on the VMs"
      }
    },
    "sshKeyData": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDLWadgtcq8rg0HMWlv1/1HQfRayLzGKmHg2ISmAJx+LQCa8SWCwBFGS0vKKwgdwhpMMCl0wI2/eURmxbpOF4Tp10jRikSIlSZyua7FU9VmlLWtYAmRQ42eWvmsCCI/IpgJ4LGODe8xDQtcXOtp3yUhkX5g9HHNwwR35Nnzum1VGMk4ftTA9CC3gfqWcIIKqQ+xE1BzqUNmGpJHghCgG/g8Oh7/sR05CXwASMoGTYuLpPHp2sEfGNm91CmnMa21ifaz4RMAcD2SwqReLgMmi0tZGUGQqLnzX/6ibJvpYSU5iZ/7qEzgDy83dBqaHbI0LEA4H0q59TJ2DWXYu+dloITz hleclerc@HeL.local",
      "metadata": {
        "description": "Public key for SSH authentication"
      }
    },
    "fileUris": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DXFrance/AzureKubernetes/master/Kubernetes-Ansible-Centos-Azure/scripts/first-boot.sh",
      "metadata": {
        "description": "Deploy/SetUp script url for ansible control vm"
      }
    },
    "commandToExecute": {
      "type": "string",
      "defaultValue": "bash first-boot.sh",
      "metadata": {
        "description": "The command to execute."
      }
    },
    "vaultAccountName": {
      "type": "string",
      "defaultValue": "kub8vault",
      "metadata": {
        "description": "Private storage account name in which you are storing your certificates for ansible and the template bash scripts"
      }
    },
    "templatesBaseURL": {
      "type": "string",
      "metadata": {
        "description": "Templates base url"
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "apiVersion": "2016-02-01",
    "configuration": {
      "ProvisioningAvailaibilitySetAndStorageTemplateURL": "[concat(parameters('templatesBaseURL'),'/ProvisioningAvailaibilitySetAndStorage.json')]",
      "CreatingNicTemplateURL": "[concat(parameters('templatesBaseURL'),'/CreatingNic.json')]",
      "ProvisioningNetworkTemplateURL": "[concat(parameters('templatesBaseURL'),'/ProvisioningNetwork.json')]",
      "CreatingPIPandLoadBalancerTemplateURL": "[concat(parameters('templatesBaseURL'),'/CreatingPIPandLoadBalancer.json')]",
      "ProvisioningVMTemplateURL": "[concat(parameters('templatesBaseURL'),'/ProvisioningVM.json')]"
    },

    "ansibleStorageAccountName": "[concat(parameters('prefix'), 'ansible')]",
    "kubeMastersStorageAccountName": "[concat(parameters('prefix'), 'kubemasters')]",
    "kubeMinionsStorageAccountName": "[concat(parameters('prefix'), 'kubeminions')]",
    "etcdStorageAccountName": "[concat(parameters('prefix'), 'etcd')]",

    "kubeMastersAvailabilitySetName": "[concat(parameters('prefix'), 'as-kube-masters')]",
    "kubeMinionsAvailabilitySetName": "[concat(parameters('prefix'), 'as-kube-minions')]",
    "etcdAvailabilitySetName": "[concat(parameters('prefix'), 'as-kube-etcd')]",

    "storageAccountType": "Standard_LRS",

    "virtualNetworkName": "[concat(parameters('prefix'),'-vnet')]",
    "ansibleNicName": "[concat(parameters('prefix'),'-nic-ansible')]",
    "kubeMasterNicName": "[concat(parameters('prefix'),'-nic-kubemaster')]",
    "kubeMinionNicName": "[concat(parameters('prefix'),'-nic-kubeminion')]",
    "etcdNicName": "[concat(parameters('prefix'),'-nic-etcd')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "ProvisioningAvailaibilitySetAndStorage",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').ProvisioningAvailaibilitySetAndStorageTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "etcdAvailabilitySetName": {
            "value": "[variables('etcdAvailabilitySetName')]"
          },
          "kubeMastersAvailabilitySetName": {
            "value": "[variables('kubeMastersAvailabilitySetName')]"
          },
          "kubeMinionsAvailabilitySetName": {
            "value": "[variables('kubeMinionsAvailabilitySetName')]"
          },
          "etcdStorageAccountName": {
            "value": "[variables('etcdStorageAccountName')]"
          },
          "kubeMastersStorageAccountName": {
            "value": "[variables('kubeMastersStorageAccountName')]"
          },
          "kubeMinionsStorageAccountName": {
            "value": "[variables('kubeMinionsStorageAccountName')]"
          },
          "ansibleStorageAccountName": {
            "value": "[variables('ansibleStorageAccountName')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "ProvisioningNetwork",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').ProvisioningNetworkTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "2015-06-15"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "CreatingPIPandLoadBalancer",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').CreatingPIPandLoadBalancerTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "numberOfMasters": {
            "value": "[parameters('numberOfMasters')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "CreatingNic",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').CreatingNicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "numberOfMasters": {
            "value": "[parameters('numberOfMasters')]"
          },
          "numberOfMinions": {
            "value": "[parameters('numberOfMinions')]"
          },
          "numberOfEtcd": {
            "value": "[parameters('numberOfEtcd')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "ansibleNicName": {
            "value": "[variables('ansibleNicName')]"
          },
          "kubeMasterNicName": {
            "value": "[variables('kubeMasterNicName')]"
          },
          "kubeMinionNicName": {
            "value": "[variables('kubeMinionNicName')]"
          },
          "etcdNicName": {
            "value": "[variables('etcdNicName')]"
          },
          "kubemastersLbID": {
            "value": "[reference('CreatingPIPandLoadBalancer').outputs.kubemastersLbID.value]"
          },
          "subnetMastersRef": {
            "value": "[reference('ProvisioningNetwork').outputs.subnetMastersRef.value]"
          },
          "subnetMinionsRef": {
            "value": "[reference('ProvisioningNetwork').outputs.subnetMinionsRef.value]"
          },
          "subnetEtcdRef": {
            "value": "[reference('ProvisioningNetwork').outputs.subnetEtcdRef.value]"
          },
          "subnetAdminRef": {
            "value": "[reference('ProvisioningNetwork').outputs.subnetAdminRef.value]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "ProvisioningVM",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').ProvisioningVMTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "numberOfMasters": {
            "value": "[parameters('numberOfMasters')]"
          },
          "numberOfMinions": {
            "value": "[parameters('numberOfMinions')]"
          },
          "numberOfEtcd": {
            "value": "[parameters('numberOfEtcd')]"
          },
          "etcdAvailabilitySetName": {
            "value": "[variables('etcdAvailabilitySetName')]"
          },
          "kubeMastersAvailabilitySetName": {
            "value": "[variables('kubeMastersAvailabilitySetName')]"
          },
          "kubeMinionsAvailabilitySetName": {
            "value": "[variables('kubeMinionsAvailabilitySetName')]"
          },
          "etcdStorageAccountName": {
            "value": "[variables('etcdStorageAccountName')]"
          },
          "kubeMastersStorageAccountName": {
            "value": "[variables('kubeMastersStorageAccountName')]"
          },
          "kubeMinionsStorageAccountName": {
            "value": "[variables('kubeMinionsStorageAccountName')]"
          },
          "ansibleStorageAccountName": {
            "value": "[variables('ansibleStorageAccountName')]"
          },
          "ansibleNicName": {
            "value": "[variables('ansibleNicName')]"
          },
          "kubeMasterNicName": {
            "value": "[variables('kubeMasterNicName')]"
          },
          "kubeMinionNicName": {
            "value": "[variables('kubeMinionNicName')]"
          },
          "etcdNicName": {
            "value": "[variables('etcdNicName')]"
          },
          "kubernetesVmSize": {
            "value": "[parameters('kubernetesVmSize')]"
          },
          "ansibleVmSize": {
            "value": "[parameters('ansibleVmSize')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sshKeyData": {
            "value": "[parameters('sshKeyData')]"
          },
          "centosOSVersion": {
            "value": "[parameters('centosOSVersion')]"
          },
          "vaultAccountName": {
            "value": "[parameters('vaultAccountName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "result": {
      "value": "Main Provisioning achieved",
      "type": "string"
    }
  }
}