{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "Schema api version from parent template"
      }
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix of the components"
      }
    },
    "numberOfMasters": {
      "type": "int",
      "metadata": {
        "description": "Number of kubernetes Masters nodes to create"
      }
    },
    "numberOfMinions": {
      "type": "int",
      "metadata": {
        "description": "Number of kubernetes Minions nodes to create"
      }
    },
    "numberOfEtcd": {
      "type": "int",
      "metadata": {
        "description": "Number of Etcd nodes to create"
      }
    },
    "ansibleNicName": {
      "type": "string",
      "metadata": {
        "description": "ansible NicName"
      }
    },
    "kubeMasterNicName": {
      "type": "string",
      "metadata": {
        "description": "kube Master NicName"
      }
    },
    "kubeMinionNicName": {
      "type": "string",
      "metadata": {
        "description": "kube Minion NicName"
      }
    },
    "etcdNicName": {
      "type": "string",
      "metadata": {
        "description": "kube Minion NicName"
      }
    },
    "kubemastersLbID": {
      "type": "string",
      "metadata": {
        "description": "kube Masters Load Balancer ID"
      }
    },
    "kubemastersLbBackendPoolID": {
      "type": "string",
      "metadata": {
        "description": "kube Masters Backend Address Pool ID"
      }
    },
    "subnetMastersRef": {
      "type": "string",
      "metadata": {
        "description": "subnet Masters"
      }
    },
    "subnetMinionsRef": {
      "type": "string",
      "metadata": {
        "description": "subnet Minions"
      }
    },
    "subnetEtcdRef": {
      "type": "string",
      "metadata": {
        "description": "subnet Etcd"
      }
    },
    "subnetAdminRef": {
      "type": "string",
      "metadata": {
        "description": "subnet Admin"
      }
    }
  },
  "variables": {
    "ansibleIPAddressName": "[concat(parameters('prefix'),'-pip-ansible')]",
    "nicPIPAddressType": "Dynamic",
    "masterNetworkInterfacesCopy": "nicopy-kube-master"
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('kubeMasterNicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "[variables('masterNetworkInterfacesCopy')]",
        "count": "[parameters('numberOfMasters')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "MastersIpConfig",
            "properties": {
              "privateIPAllocationMethod": "[variables('nicPIPAddressType')]",
              "subnet": {
                "id": "[parameters('subnetMastersRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[parameters('kubemastersLbBackendPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(parameters('kubemastersLbID'),'/inboundNatRules/HTTP-80', copyindex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('kubeMinionNicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopMinions",
        "count": "[parameters('numberOfMinions')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "MinionsIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetMinionsRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('etcdNicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopEtcd",
        "count": "[parameters('numberOfEtcd')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "EtcdIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetEtcdRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('ansibleNicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ansibleIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ansibleIPAddressName'))]"
              },
              "subnet": {
                "id": "[parameters('subnetAdminRef')]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "etcdPrivateIP": {
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces',concat(parameters('etcdNicName'),'0'))).ipConfigurations[0].properties.privateIPAddress]",
      "type": "string"
    },
    "result": {
      "value": "Nic Provisioning achieved",
      "type": "string"
    }
  }
}