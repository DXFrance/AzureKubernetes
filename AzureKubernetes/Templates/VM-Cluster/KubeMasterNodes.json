{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "Schema api version from parent template"
      }
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix of the components"
      }
    },
    "numberOfMasters": {
      "type": "int",
      "metadata": {
        "description": "Number of kubernetes Masters nodes to create"
      }
    },
    "kubeMastersAvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "kube Masters AvailabilitySet Name"
      }
    },
    "kubeMastersStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "kube StorageAccount Name"
      }
    },
    "kubeMasterNicName": {
      "type": "string",
      "metadata": {
        "description": "kube Master NicName"
      }
    },
    "kubemastersLbID": {
      "type": "string",
      "metadata": {
        "description": "kube Masters Load Balancer ID"
      }
    },
    "kubemastersLbBackendPoolID": {
      "type": "string",
      "metadata": {
        "description": "kube Masters Backend Address Pool ID"
      }
    },
    "subnetMastersRef": {
      "type": "string",
      "metadata": {
        "description": "subnet Masters"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Username for login to the VMs"
      }
    },
    "adminPassword": {
      "type": "string",
      "metadata": {
        "description": "Password for login to the VMs"
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Public key for SSH authentication"
      }
    },
    "centosOSVersion": {
      "type": "string",
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Allowed values are: 7.0, 7.1, 7.2"
      }
    },
    "kubernetesVmSize": {
      "type": "string",
      "metadata": {
        "description": "Instance size for Kubernetes VMs"
      }
    },
    "vaultAccountName": {
      "type": "string",
      "metadata": {
        "description": "Private storage account name in which you are storing your certificates for ansible and the template bash scripts"
      }
    },
    "fileUris": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DXFrance/AzureKubernetes/master/Kubernetes-Ansible-Centos-Azure/scripts/first-boot.sh",
      "metadata": {
        "description": "Deploy/SetUp script url for ansible control vm"
      }
    },
    "commandToExecute": {
      "type": "string",
      "defaultValue": "bash first-boot.sh",
      "metadata": {
        "description": "The command to execute."
      }
    }
  },
  "variables": {
    "nicPIPAddressType": "Dynamic",
    "masterNetworkInterfacesCopy": "nicopy-kube-master",
    "kubeMasterVmName": "[concat(parameters('prefix'),'-kube-master-')]",
    "kubeMasterOsDiskName": "[concat(parameters('prefix'),'-kube-master-os-')]",
    "kubeMasterDataDiskName": "[concat(parameters('prefix'),'-kube-master-data-')]",

    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "imageReference": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "[parameters('centosOSVersion')]",
      "version": "latest"
    },
    "scriptBlobLocation": "scripts/deploy.sh",
    "scriptBlobUrl": "[concat('https://',parameters('vaultAccountName'),'.blob.core.windows.net/',variables('scriptBlobLocation'))]",

    "keysBlobLocation": "keys/id_rsa",
    "keysBlobUrl": "[concat('https://',parameters('vaultAccountName'),'.blob.core.windows.net/',variables('keysBlobLocation'))]",

    "pubBlobLocation": "keys/id_rsa.pub",
    "pubBlobUrl": "[concat('https://',parameters('vaultAccountName'),'.blob.core.windows.net/',variables('pubBlobLocation'))]",

    "assetsStorageAccountId": "[resourceId(parameters('vaultAccountName'),'Microsoft.Storage/storageAccounts', parameters('vaultAccountName'))]",

    "adminPassword": "V3l0C1RaPt0R#",
    "disablePasswordAuthentication": "true"
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('kubeMasterNicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "[variables('masterNetworkInterfacesCopy')]",
        "count": "[parameters('numberOfMasters')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "MastersIpConfig",
            "properties": {
              "privateIPAllocationMethod": "[variables('nicPIPAddressType')]",
              "subnet": {
                "id": "[parameters('subnetMastersRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[parameters('kubemastersLbBackendPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(parameters('kubemastersLbID'),'/inboundNatRules/HTTP-80', copyindex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('kubeMasterVmName'), copyindex())]",
      "copy": {
        "name": "vmLoopMasters",
        "count": "[parameters('numberOfMasters')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('kubeMastersAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('kubernetesvmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('kubeMasterVmName'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "[variables('disablePasswordAuthentication')]",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat(variables('kubeMasterOsDiskName'), copyindex())]",
            "vhd": {
              "uri": "[concat('http://',parameters('kubeMastersStorageAccountName'),'.blob.core.windows.net/vhds/', variables('kubemasterOsDiskName'), copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('kubeMasterDataDiskName'), copyindex())]",
              "diskSizeGB": "1000",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', parameters('kubeMastersStorageAccountName'),'.blob.core.windows.net/vhds/', variables('kubemasterDataDiskName'), copyIndex(), '.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('kubeMasterNicName'),copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('kubeMasterVmName'), copyIndex(),'/master')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "extensionLoopMasters",
        "count": "[parameters('numberOfMasters')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/',concat(variables('kubeMasterVmName'),copyIndex()))]",
        "[concat('Microsoft.Network/networkInterfaces/',parameters('kubeMasterNicName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[parameters('fileUris')]"
          ],
          "commandToExecute": "[concat(parameters('commandToExecute'), ' ', reference(resourceId('Microsoft.Network/networkInterfaces',concat(parameters('kubeMasterNicName'), copyindex()))).ipConfigurations[0].properties.privateIPAddress,' masters')]",
        }
      }
    }
  ],
  "outputs": {
    "result": {
      "value": "Kubernetes Minion Nodes Provisioning achieved",
      "type": "string"
    }
  }
}